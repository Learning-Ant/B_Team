-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- MEMBER Table Create SQL
CREATE TABLE MEMBER
(
    M_NO           INT              NOT NULL, 
    M_ID           VARCHAR2(100)    NOT NULL, 
    M_PW           VARCHAR2(100)    NOT NULL, 
    M_PHONE        VARCHAR2(20)     NOT NULL, 
    M_NAME         VARCHAR2(50)     NOT NULL, 
    M_BIRTH        VARCHAR2(20)     NOT NULL, 
    M_NICK         VARCHAR2(100)    NOT NULL, 
    M_EMAIL        VARCHAR2(100)    NOT NULL, 
    M_REGDATE      DATE             DEFAULT SYSDATE NOT NULL, 
    M_AUTH         INT          DEFAULT '0' NOT NULL, 
    M_AGREEMENT    INT              NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (M_NO)
);
/

CREATE SEQUENCE MEMBER_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE
;
/

--DROP SEQUENCE MEMBER_SEQ;
/

COMMENT ON COLUMN MEMBER.M_NO IS '회원번호'
/

COMMENT ON COLUMN MEMBER.M_ID IS '회원아이디'
/

COMMENT ON COLUMN MEMBER.M_PW IS '회원비밀번호'
/

COMMENT ON COLUMN MEMBER.M_PHONE IS '회원연락처'
/

COMMENT ON COLUMN MEMBER.M_NAME IS '회원이름'
/

COMMENT ON COLUMN MEMBER.M_BIRTH IS '생년월일'
/

COMMENT ON COLUMN MEMBER.M_NICK IS '회원닉네임'
/

COMMENT ON COLUMN MEMBER.M_EMAIL IS '회원이메일'
/

COMMENT ON COLUMN MEMBER.M_REGDATE IS '가입일'
/

COMMENT ON COLUMN MEMBER.M_AUTH IS '인증'
/

COMMENT ON COLUMN MEMBER.M_AGREEMENT IS '약관동의'
/

ALTER TABLE MEMBER
    ADD CONSTRAINT UC_M_ID UNIQUE (M_ID)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT UC_M_PHONE UNIQUE (M_PHONE)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT UC_M_NICK UNIQUE (M_NICK)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT UC_M_EMAIL UNIQUE (M_EMAIL)
/


-- MEMBER Table Create SQL
CREATE TABLE CATEGORY
(
    CT_NO      INT              NOT NULL, 
    CT_NAME    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT CATEGORY_PK PRIMARY KEY (CT_NO)
);
/

CREATE SEQUENCE CATEGORY_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE CATEGORY_SEQ;
/

COMMENT ON COLUMN CATEGORY.CT_NO IS '카테고리번호'
/

COMMENT ON COLUMN CATEGORY.CT_NAME IS '카테고리명'
/


-- MEMBER Table Create SQL
CREATE TABLE CLUB
(
    C_NO           INT               NOT NULL, 
    CT_NO          INT               NOT NULL, 
    M_NO           INT               NOT NULL, 
    C_TITLE        VARCHAR2(100)     NOT NULL, 
    C_CONTENT      VARCHAR2(4000)    NULL, 
    C_POSTDATE     DATE              NOT NULL, 
    C_ENJOYDATE    VARCHAR2(1000)    NULL, 
    C_ENDDATE      DATE              NOT NULL, 
    C_MIN          INT               NOT NULL, 
    C_MAX          INT               NOT NULL, 
    C_COUNT        INT               DEFAULT 1 NOT NULL, 
    C_THUMB        VARCHAR2(50)      NULL, 
    C_DELETE       INT               DEFAULT 0 NOT NULL, 
    C_PART         INT               DEFAULT 0 NOT NULL, 
    CONSTRAINT CLUB_PK PRIMARY KEY (C_NO)
);
/

CREATE SEQUENCE CLUB_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE CLUB_SEQ;
/

COMMENT ON COLUMN CLUB.C_NO IS '클럽번호'
/

COMMENT ON COLUMN CLUB.CT_NO IS '카테고리번호'
/

COMMENT ON COLUMN CLUB.M_NO IS '클럽장'
/

COMMENT ON COLUMN CLUB.C_TITLE IS '클럽명'
/

COMMENT ON COLUMN CLUB.C_CONTENT IS '클럽내용'
/

COMMENT ON COLUMN CLUB.C_POSTDATE IS '게시일'
/

COMMENT ON COLUMN CLUB.C_ENJOYDATE IS '모임일'
/

COMMENT ON COLUMN CLUB.C_ENDDATE IS '종료날짜'
/

COMMENT ON COLUMN CLUB.C_MIN IS '최소인원'
/

COMMENT ON COLUMN CLUB.C_MAX IS '최대인원'
/

COMMENT ON COLUMN CLUB.C_COUNT IS '현재인원'
/

COMMENT ON COLUMN CLUB.C_THUMB IS '썸네일'
/

COMMENT ON COLUMN CLUB.C_DELETE IS '삭제여부'
/

COMMENT ON COLUMN CLUB.C_PART IS '기준'
/

ALTER TABLE CLUB
    ADD CONSTRAINT FK_CLUB_M_NO_MEMBER_M_NO FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/

ALTER TABLE CLUB
    ADD CONSTRAINT FK_CLUB_CT_NO_CATEGORY_CT_NO FOREIGN KEY (CT_NO)
        REFERENCES CATEGORY (CT_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE PLACECATEGORY
(
    PC_NO      INT              NOT NULL, 
    PC_NAME    VARCHAR2(100)    NULL, 
    CONSTRAINT PLACECATEGORY_PK PRIMARY KEY (PC_NO)
);
/

CREATE SEQUENCE PLACECATEGORY_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE PLACECATEGORY_SEQ;
/

COMMENT ON COLUMN PLACECATEGORY.PC_NO IS '장소카테고리번호'
/

COMMENT ON COLUMN PLACECATEGORY.PC_NAME IS '카테고리'
/


-- MEMBER Table Create SQL
CREATE TABLE SELLER
(
    S_NO           INT              NOT NULL, 
    S_ID           VARCHAR2(100)    NOT NULL, 
    S_PW           VARCHAR2(100)    NOT NULL, 
    S_PHONE        VARCHAR2(20)     NOT NULL, 
    S_NAME         VARCHAR2(50)     NOT NULL, 
    S_BIRTH        VARCHAR2(20)     NOT NULL, 
    S_EMAIL        VARCHAR2(100)    NOT NULL, 
    S_REGDATE      DATE             DEFAULT SYSDATE NOT NULL, 
    S_AUTH         CHAR(1)          DEFAULT '0' NOT NULL, 
    S_AGREEMENT    INT              NOT NULL, 
    S_COMPANYNO    VARCHAR2(50)     NOT NULL, 
    CONSTRAINT SELLER_PK PRIMARY KEY (S_NO)
);
/

CREATE SEQUENCE SELLER_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE SELLER_SEQ;
/

COMMENT ON COLUMN SELLER.S_NO IS '판매자번호'
/

COMMENT ON COLUMN SELLER.S_ID IS '판매자아이디'
/

COMMENT ON COLUMN SELLER.S_PW IS '판매자비밀번호'
/

COMMENT ON COLUMN SELLER.S_PHONE IS '판매자연락처'
/

COMMENT ON COLUMN SELLER.S_NAME IS '판매자이름'
/

COMMENT ON COLUMN SELLER.S_BIRTH IS '생년월일'
/

COMMENT ON COLUMN SELLER.S_EMAIL IS '판매자이메일'
/

COMMENT ON COLUMN SELLER.S_REGDATE IS '가입일'
/

COMMENT ON COLUMN SELLER.S_AUTH IS '인증'
/

COMMENT ON COLUMN SELLER.S_AGREEMENT IS '약관동의'
/

COMMENT ON COLUMN SELLER.S_COMPANYNO IS '사업자번호'
/

ALTER TABLE SELLER
    ADD CONSTRAINT UC_S_ID UNIQUE (S_ID)
/

ALTER TABLE SELLER
    ADD CONSTRAINT UC_S_PHONE UNIQUE (S_PHONE)
/

ALTER TABLE SELLER
    ADD CONSTRAINT UC_S_EMAIL UNIQUE (S_EMAIL)
/


-- MEMBER Table Create SQL
CREATE TABLE PLACE
(
    P_NO         INT               NOT NULL, 
    S_NO         INT               NOT NULL, 
    PC_NO        INT               NOT NULL, 
    P_TITLE      VARCHAR2(100)     NOT NULL, 
    P_DESC       VARCHAR2(200)     NOT NULL, 
    P_CONTENT    VARCHAR2(4000)    NOT NULL, 
    P_INFO       VARCHAR2(1000)    NOT NULL, 
    P_NAME       VARCHAR2(200)     NOT NULL, 
    P_ADDR       VARCHAR2(200)     NOT NULL, 
    P_STAR       INT               NULL, 
    P_IMG        VARCHAR2(50)      NULL, 
    P_           INT               DEFAULT DEFALUT(0) NOT NULL, 
    P_URL        VARCHAR2(100)     NULL, 
    P_REMARK     VARCHAR2(2000)    NULL, 
    P_DELETE     INT               DEFAULT 0 NULL, 
    CONSTRAINT PLACE_PK PRIMARY KEY (P_NO)
);
/

CREATE SEQUENCE PLACE_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE PLACE_SEQ;
/


COMMENT ON COLUMN PLACE.P_NO IS '게시번호'
/

COMMENT ON COLUMN PLACE.S_NO IS '판매자번호'
/

COMMENT ON COLUMN PLACE.PC_NO IS '카테고리번호'
/

COMMENT ON COLUMN PLACE.P_TITLE IS '공간제목'
/

COMMENT ON COLUMN PLACE.P_DESC IS '공간한줄설명'
/

COMMENT ON COLUMN PLACE.P_CONTENT IS '공간설명'
/

COMMENT ON COLUMN PLACE.P_INFO IS '시설안내'
/

COMMENT ON COLUMN PLACE.P_NAME IS '업체명'
/

COMMENT ON COLUMN PLACE.P_ADDR IS '위치'
/

COMMENT ON COLUMN PLACE.P_STAR IS '별점'
/

COMMENT ON COLUMN PLACE.P_IMG IS '썸네일'
/

COMMENT ON COLUMN PLACE.P_ IS '승인여부'
/

COMMENT ON COLUMN PLACE.P_URL IS '홈페이지'
/

COMMENT ON COLUMN PLACE.P_REMARK IS '비고'
/

COMMENT ON COLUMN PLACE.P_DELETE IS '삭제여부'
/

ALTER TABLE PLACE
    ADD CONSTRAINT FK_PLACE_PC_NO_PLACECATEGORY_P FOREIGN KEY (PC_NO)
        REFERENCES PLACECATEGORY (PC_NO)
/

ALTER TABLE PLACE
    ADD CONSTRAINT FK_PLACE_S_NO_SELLER_S_NO FOREIGN KEY (S_NO)
        REFERENCES SELLER (S_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE PLACE_OPTION
(
    PO_NO          INT             NOT NULL, 
    P_NO           INT             NOT NULL, 
    PO_MIN         INT             NOT NULL, 
    PO_MAX         INT             NOT NULL, 
    PO_DAYPRICE    INT             NOT NULL, 
    PO_HOLIDAY     INT             NULL, 
    PO_ADDPRICE    INT             NULL, 
    PO_IMG1        VARCHAR2(50)    NULL, 
    PO_IMG2        VARCHAR2(50)    NULL, 
    PO_IMG3        VARCHAR2(50)    NULL, 
    PO_FXILITY     VAR             NULL   
);
/

CREATE SEQUENCE PLACE_OPTION_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE PLACE_OPTION_SEQ;
/

COMMENT ON COLUMN PLACE_OPTION.PO_NO IS '인덱스'
/

COMMENT ON COLUMN PLACE_OPTION.P_NO IS '게시번호'
/

COMMENT ON COLUMN PLACE_OPTION.PO_MIN IS '최소인원'
/

COMMENT ON COLUMN PLACE_OPTION.PO_MAX IS '최대인원'
/

COMMENT ON COLUMN PLACE_OPTION.PO_DAYPRICE IS '가격'
/

COMMENT ON COLUMN PLACE_OPTION.PO_HOLIDAY IS '공휴일가격'
/

COMMENT ON COLUMN PLACE_OPTION.PO_ADDPRICE IS '인당추가가격'
/

COMMENT ON COLUMN PLACE_OPTION.PO_IMG1 IS '사진1'
/

COMMENT ON COLUMN PLACE_OPTION.PO_IMG2 IS '사진2'
/

COMMENT ON COLUMN PLACE_OPTION.PO_IMG3 IS '사진3'
/

COMMENT ON COLUMN PLACE_OPTION.PO_FXILITY IS '편의시설'
/

ALTER TABLE PLACE_OPTION
    ADD CONSTRAINT FK_PLACE_OPTION_P_NO_PLACE_P_N FOREIGN KEY (P_NO)
        REFERENCES PLACE (P_NO)
/

ALTER TABLE PLACE_OPTION
    ADD CONSTRAINT UC_P_NO UNIQUE (P_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE CLUBLIST
(
    CL_NO    INT    NOT NULL, 
    C_NO     INT    NOT NULL, 
    M_NO     INT    NOT NULL, 
    CONSTRAINT CLUBLIST_PK PRIMARY KEY (CL_NO)
);
/

CREATE SEQUENCE CLUBLIST_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE CLUBLIST_SEQ;
/

COMMENT ON COLUMN CLUBLIST.CL_NO IS '리스트번호'
/

COMMENT ON COLUMN CLUBLIST.C_NO IS '클럽번호'
/

COMMENT ON COLUMN CLUBLIST.M_NO IS '회원번호'
/

ALTER TABLE CLUBLIST
    ADD CONSTRAINT FK_CLUBLIST_M_NO_MEMBER_M_NO FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/

ALTER TABLE CLUBLIST
    ADD CONSTRAINT FK_CLUBLIST_C_NO_CLUB_C_NO FOREIGN KEY (C_NO)
        REFERENCES CLUB (C_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE REPLY(BOARD)
(
    R_NO          INT               NOT NULL, 
    C_NO          INT               NOT NULL, 
    M_NO          INT               NOT NULL, 
    R_CONTENT     VARCHAR2(4000)    NULL, 
    R_DELETE      INT               DEFAULT 0 NULL, 
    R_POSTDATE    DATE              DEFAULT SYSDATE NOT NULL, 
    CONSTRAINT REPLY(BOARD)_PK PRIMARY KEY (R_NO)
);
/

CREATE SEQUENCE REPLY(BOARD)_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE REPLY(BOARD)_SEQ;
/

COMMENT ON COLUMN REPLY(BOARD).R_NO IS '댓글번호'
/

COMMENT ON COLUMN REPLY(BOARD).C_NO IS '클럽번호'
/

COMMENT ON COLUMN REPLY(BOARD).M_NO IS '회원번호'
/

COMMENT ON COLUMN REPLY(BOARD).R_CONTENT IS '댓글내용'
/

COMMENT ON COLUMN REPLY(BOARD).R_DELETE IS '삭제여부'
/

COMMENT ON COLUMN REPLY(BOARD).R_POSTDATE IS '작성시간'
/

ALTER TABLE REPLY(BOARD)
    ADD CONSTRAINT FK_REPLY(BOARD)_C_NO_CLUB_C_NO FOREIGN KEY (C_NO)
        REFERENCES CLUB (C_NO)
/

ALTER TABLE REPLY(BOARD)
    ADD CONSTRAINT FK_REPLY(BOARD)_M_NO_MEMBER_M_ FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE RESERVATION(OR BOOKING)
(
    RES_NO        INT             NOT NULL, 
    M_NO          INT             NOT NULL, 
    PO_NO         INT             NOT NULL, 
    RES_DATE      DATE            NOT NULL, 
    RES_PEOPLE    INT             NOT NULL, 
    RES_STATE     VARCHAR2(20)    NULL, 
    CONSTRAINT RESERVATION(OR BOOKING)_PK PRIMARY KEY (RES_NO)
);
/

CREATE SEQUENCE RESERVATION(OR BOOKING)_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE RESERVATION(OR BOOKING)_SEQ;
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).RES_NO IS '예약번호'
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).M_NO IS '예약자'
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).PO_NO IS '옵션인덱스'
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).RES_DATE IS '예약날짜'
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).RES_PEOPLE IS '예약인원'
/

COMMENT ON COLUMN RESERVATION(OR BOOKING).RES_STATE IS '예약상태'
/

ALTER TABLE RESERVATION(OR BOOKING)
    ADD CONSTRAINT FK_RESERVATION(OR BOOKING)_M_N FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/

ALTER TABLE RESERVATION(OR BOOKING)
    ADD CONSTRAINT FK_RESERVATION(OR BOOKING)_PO_ FOREIGN KEY (PO_NO)
        REFERENCES PLACE_OPTION (PO_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE REVIEW
(
    RV_NO        INT               NOT NULL, 
    M_NO         INT               NOT NULL, 
    P_NO         INT               NOT NULL, 
    RV_DELETE    INT               DEFAULT 0 NULL, 
    RV_STAR      INT               DEFAULT 0 NULL, 
    RV_IMG       VARCHAR2(4000)    NULL, 
    CONSTRAINT REVIEW_PK PRIMARY KEY (RV_NO)
);
/

CREATE SEQUENCE REVIEW_SEQ
START WITH 1
INCREMENT BY 1;
/

--DROP SEQUENCE REVIEW_SEQ;
/

COMMENT ON COLUMN REVIEW.RV_NO IS '리뷰번호'
/

COMMENT ON COLUMN REVIEW.M_NO IS '클럽장'
/

COMMENT ON COLUMN REVIEW.P_NO IS '업체번호'
/

COMMENT ON COLUMN REVIEW.RV_DELETE IS '삭제여부'
/

COMMENT ON COLUMN REVIEW.RV_STAR IS '별점'
/

COMMENT ON COLUMN REVIEW.RV_IMG IS '장소리뷰'
/

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_P_NO_PLACE_P_NO FOREIGN KEY (P_NO)
        REFERENCES PLACE (P_NO)
/

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_M_NO_MEMBER_M_NO FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/


-- MEMBER Table Create SQL
CREATE TABLE NOTICE
(
    N_NO          INT               NOT NULL, 
    N_TITLE       VARCHAR2(100)     NOT NULL, 
    N_CONTENT     VARCHAR2(4000)    NOT NULL, 
    N_POSTDATE    DATE              DEFAULT SYSDATE NOT NULL, 
    CONSTRAINT NOTICE_PK PRIMARY KEY (N_NO)
);
/

CREATE SEQUENCE NOTICE_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE NOTICE_SEQ;
/

COMMENT ON COLUMN NOTICE.N_NO IS '번호'
/

COMMENT ON COLUMN NOTICE.N_TITLE IS '제목'
/

COMMENT ON COLUMN NOTICE.N_CONTENT IS '내용'
/

COMMENT ON COLUMN NOTICE.N_POSTDATE IS '작성일'
/


-- MEMBER Table Create SQL
CREATE TABLE FAQ
(
    F_NO          INT               NOT NULL, 
    F_TITLE       VARCHAR2(100)     NOT NULL, 
    F_CONTENT     VARCHAR2(4000)    NOT NULL, 
    F_REGDATE     DATE              DEFAULT SYSDATE NOT NULL, 
    F_CATEGORY    INT               DEFAULT 1, 2, 3 NOT NULL, 
    CONSTRAINT FAQ_PK PRIMARY KEY (F_NO)
);
/

CREATE SEQUENCE FAQ_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE FAQ_SEQ;
/

COMMENT ON COLUMN FAQ.F_NO IS '번호'
/

COMMENT ON COLUMN FAQ.F_TITLE IS '제목'
/

COMMENT ON COLUMN FAQ.F_CONTENT IS '내용'
/

COMMENT ON COLUMN FAQ.F_REGDATE IS '날짜'
/

COMMENT ON COLUMN FAQ.F_CATEGORY IS '분류'
/


-- MEMBER Table Create SQL
CREATE TABLE WISHLIST
(
    W_NO    INT    NOT NULL, 
    C_NO    INT    NOT NULL, 
    M_NO    INT    NOT NULL, 
    CONSTRAINT WISHLIST_PK PRIMARY KEY (W_NO)
);
/

CREATE SEQUENCE WISHLIST_SEQ
START WITH 1
INCREMENT BY 1
NOCYCLE
NOCACHE;
/

--DROP SEQUENCE WISHLIST_SEQ;
/

COMMENT ON COLUMN WISHLIST.W_NO IS '위시리스트번호'
/

COMMENT ON COLUMN WISHLIST.C_NO IS '클럽번호'
/

COMMENT ON COLUMN WISHLIST.M_NO IS '회원번호'
/

ALTER TABLE WISHLIST
    ADD CONSTRAINT FK_WISHLIST_C_NO_CLUB_C_NO FOREIGN KEY (C_NO)
        REFERENCES CLUB (C_NO)
/

ALTER TABLE WISHLIST
    ADD CONSTRAINT FK_WISHLIST_M_NO_MEMBER_M_NO FOREIGN KEY (M_NO)
        REFERENCES MEMBER (M_NO)
/


